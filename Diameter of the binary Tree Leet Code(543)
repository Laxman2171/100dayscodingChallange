/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {


    private int solve(TreeNode root,int[] result){

        if(root==null){
            return 0;

        }
        int lh=solve(root.left,result);
        int rh=solve(root.right,result);


         result[0]=Math.max(result[0],lh+rh);
        return Math.max(lh,rh)+1;
        
    }

    public int diameterOfBinaryTree(TreeNode root) {  

        int[] result = { Integer.MIN_VALUE };
        solve(root,result);
        return result[0];
        
    }
}
